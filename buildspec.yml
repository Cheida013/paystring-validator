version: 0.2

env:
  variables:
     NODE_ENV: "production"

phases:
  install:
    runtime-versions:
      nodejs: 14
      php: 7.4
    commands:
      - PYTHON=python2 amazon-linux-extras enable php7.4
      - yum -y install php-gmp
      - yum -y install php-mbstring
      # This is a HACK of the PHP install for CodeDeploy is not a standard install for some reason
      # When yum installs the php-gmp it installs it not in the php install root
      - PHP_EXTENSION_DIR="$(php -i | grep ^extension_dir | awk -F ' => ' '{print $2}')"
      - mv /usr/lib64/php/modules/gmp.so $PHP_EXTENSION_DIR/
      - PHP_INI_DIR="$(php -i | grep ^Scan | awk -F ' => ' '{print $2}')"
      - mv /etc/php.d/20-gmp.ini $PHP_INI_DIR/
      # Install composer
      - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - php composer-setup.php
      - php -r "unlink('composer-setup.php');"
      - mv composer.phar /usr/local/bin/composer
  build:
    commands:
      - sed -i "s/<% RELEASE_HASH %>/$CODEBUILD_RESOLVED_SOURCE_VERSION/g" dist/includes/footer.php
      - RELEASE_HASH_SHORT=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-6)
      - sed -i "s/<% RELEASE_HASH_SHORT %>/$RELEASE_HASH_SHORT/g" dist/includes/footer.php
      # Have composer install the PHP dependencies
      - cd dist && composer install --no-progress --no-suggest --no-scripts && rm -f composer.* && cd -
      # Install dependencies
      - npm install
      # Build/compile the production CSS now
      - npm run build:css
      - npm run cachebust
      # Remove the node_modules directory now that we are done building to make the artifact smaller
      - rm -Rf node_modules
      # No need to keep the "src" directory for a build
      - rm -Rf src

artifacts:
  files:
    - '**/*'