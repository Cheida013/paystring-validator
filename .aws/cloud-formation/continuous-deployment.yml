AWSTemplateFormatVersion: 2010-09-09
Description: 'Continuous deployment stack. Code pushed to master on github.com/rswarthout/payid-validator is built and deployed automatically.'

Resources:
  iamCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: inline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/payid"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/payid:*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue s3Bucket
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !ImportValue s3Bucket
                      - "/*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:BatchPutTestCases
                  - codebuild:CreateReport
                  - codebuild:CreateReportGroup
                  - codebuild:StartBuild
                  - codebuild:UpdateReport
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: "*"
              - Effect: Allow
                Action:
                  - autoscaling:CompleteLifecycleAction
                  - autoscaling:DeleteLifecycleHook
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLifecycleHooks
                  - autoscaling:PutLifecycleHook
                  - autoscaling:RecordLifecycleActionHeartbeat
                Resource: "*"
      RoleName: !Join
        - "-"
        - - "codepipeline"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"

  codebuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: NODE_ENV
            Type: PLAINTEXT
            Value: production
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: /aws/codebuild/payid
          Status: ENABLED
          StreamName: app
      Name: !Join
        - "-"
        - - "payid"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      QueuedTimeoutInMinutes: 60
      ServiceRole:
        Ref: iamCodePipelineRole
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 20
    DependsOn:
      - iamCodePipelineRole

  codedeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Join
        - "-"
        - - "payid"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      ComputePlatform: Server
  codedeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref codedeployApplication
      AutoScalingGroups:
        - Fn::ImportValue: ec2AutoScalingGroup
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentGroupName: app
      DeploymentStyle:
        DeploymentOption: WITHOUT_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      ServiceRoleArn: !GetAtt iamCodePipelineRole.Arn
    DependsOn:
      - iamCodePipelineRole
      - codedeployApplication

  codePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          !ImportValue s3Bucket
      Name: !Join
        - "-"
        - - "payid"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      RoleArn: !GetAtt iamCodePipelineRole.Arn
      Stages:
        - Actions:
          - ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            Configuration:
              Owner: rswarthout
              Repo: payid-validator
              Branch: master
              OAuthToken: '{{resolve:secretsmanager:gitHubSecret:SecretString:token}}'
              PollForSourceChanges: false
            Name: Source
            Namespace: SourceVariables
            OutputArtifacts:
              - Name: SourceArtifact
            RunOrder: 1
          Name: Source
        - Actions:
          - ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName:
                Ref: codebuildProject
            InputArtifacts:
              - Name: SourceArtifact
            Name: Build
            Namespace: BuildVariables
            OutputArtifacts:
              - Name: BuildArtifact
            RunOrder: 1
          Name: Build
        - Actions:
          - ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CodeDeploy
              Version: 1
            Configuration:
              ApplicationName:
                Ref: codedeployApplication
              DeploymentGroupName:
                Ref: codedeployDeploymentGroup
            InputArtifacts:
              - Name: BuildArtifact
            Name: Deploy
            RunOrder: 1
          Name: Deploy
    DependsOn:
      - iamCodePipelineRole
      - codebuildProject
      - codedeployApplication
      - codedeployDeploymentGroup

  cloudwatchLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/codebuild/payid
      RetentionInDays: 7