AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure to support hosting of payidvalidator.com'
Parameters:
  paramSshSourceIp:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: Source IP of SSH (eg 12.34.56.78/32)
    Type: String
  paramVpcCidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.1.0.0/16
    Description: VPC CIDR Block (eg 10.0.0.0/16)
    Type: String

Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: paramVpcCidr
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: payid

  vpcInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: internet-gateway
    DependsOn: vpc
  vpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpc
      InternetGatewayId:
        Ref: vpcInternetGateway
    DependsOn: vpcInternetGateway

  vpcDhcpOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: ec2.internal
      DomainNameServers:
        - AmazonProvidedDNS
  vpcDhcpOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: vpc
      DhcpOptionsId:
        Ref: vpcDhcpOptions
    DependsOn: vpcDhcpOptions

  vpcNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: vpc
    DependsOn: vpc
  vpcNetworkAclEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: vpcNetworkAcl
    DependsOn: vpcNetworkAcl
  vpcNetworkAclEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId:
        Ref: vpcNetworkAcl
    DependsOn: vpcNetworkAcl

  vpcSubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.10.0/24
      CidrBlock: !Select
        - 0
        - Fn::Cidr:
          - !Ref paramVpcCidr
          - 256
          - 8
      AvailabilityZone: us-east-1a
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: public-a
    DependsOn: vpc
  vpcSubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 1
        - Fn::Cidr:
          - !Ref paramVpcCidr
          - 256
          - 8
      AvailabilityZone: us-east-1b
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: public-b
    DependsOn: vpc
  vpcSubnetPublicC:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 2
        - Fn::Cidr:
          - !Ref paramVpcCidr
          - 256
          - 8
      AvailabilityZone: us-east-1c
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: public-c
    DependsOn: vpc
  vpcSubnetPublicD:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select
        - 3
        - Fn::Cidr:
          - !Ref paramVpcCidr
          - 256
          - 8
      AvailabilityZone: us-east-1d
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: public-d
    DependsOn: vpc

  vpcRouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: public
    DependsOn: vpc
  vpcRouteTableEntry1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: vpcRouteTablePublic
      GatewayId:
        Ref: vpcInternetGateway
    DependsOn:
      - vpcRouteTablePublic
      - vpcInternetGateway
  vpcRouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: private
    DependsOn: vpc

  vpcSubnetAclAssociationPublicA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: vpcNetworkAcl
      SubnetId:
        Ref: vpcSubnetPublicA
    DependsOn:
      - vpcNetworkAcl
      - vpcSubnetPublicA
  vpcSubnetAclAssociationPublicB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: vpcNetworkAcl
      SubnetId:
        Ref: vpcSubnetPublicB
    DependsOn:
      - vpcNetworkAcl
      - vpcSubnetPublicB
  vpcSubnetAclAssociationPublicC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: vpcNetworkAcl
      SubnetId:
        Ref: vpcSubnetPublicC
    DependsOn:
      - vpcNetworkAcl
      - vpcSubnetPublicC
  vpcSubnetAclAssociationPublicD:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: vpcNetworkAcl
      SubnetId:
        Ref: vpcSubnetPublicD
    DependsOn:
      - vpcNetworkAcl
      - vpcSubnetPublicD

  vpcSubnetRouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcRouteTablePublic
      SubnetId:
        Ref: vpcSubnetPublicA
    DependsOn:
      - vpcRouteTablePublic
      - vpcSubnetPublicA
  vpcSubnetRouteTableAssociationPublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcRouteTablePublic
      SubnetId:
        Ref: vpcSubnetPublicB
    DependsOn:
      - vpcRouteTablePublic
      - vpcSubnetPublicB
  vpcSubnetRouteTableAssociationPublicC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcRouteTablePublic
      SubnetId:
        Ref: vpcSubnetPublicC
    DependsOn:
      - vpcRouteTablePublic
      - vpcSubnetPublicC
  vpcSubnetRouteTableAssociationPublicD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcRouteTablePublic
      SubnetId:
        Ref: vpcSubnetPublicD
    DependsOn:
      - vpcRouteTablePublic
      - vpcSubnetPublicD

  securityGroupEc2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: app-server
      GroupName: app-server
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: app-server
    DependsOn: vpc
  securityGroupLoadBalancer:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: load-balancer
      GroupName: load-balancer
      VpcId:
        Ref: vpc
      Tags:
        - Key: Name
          Value: load-balancer
    DependsOn: vpc
  securityGroupEc2IngressPort80:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: securityGroupEc2
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      SourceSecurityGroupId:
        Ref: securityGroupLoadBalancer
    DependsOn:
      - securityGroupEc2
      - securityGroupLoadBalancer
  securityGroupEc2IngressPort22:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: securityGroupEc2
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp:
        Ref: paramSshSourceIp
    DependsOn: securityGroupEc2
  securityGroupEc2EgressPortAll:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: securityGroupEc2
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
    DependsOn: securityGroupEc2
  securityGroupLoadBalancerIngressPort443:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Ref: securityGroupLoadBalancer
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0
    DependsOn: securityGroupLoadBalancer
  securityGroupLoadBalancerEgressPortAll:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Ref: securityGroupLoadBalancer
      IpProtocol: "-1"
      CidrIp: 0.0.0.0/0
    DependsOn: securityGroupLoadBalancer

Outputs:
  vpcId:
    Description: VPC ID
    Value: !Ref vpc
    Export:
      Name: infrastructureVpcId
  publicSubnetIdA:
    Description: Subnet ID of zone A
    Value: !Ref vpcSubnetPublicA
    Export:
      Name: infrastructureVpcSubnetIdA
  publicSubnetIdB:
    Description: Subnet ID of zone B
    Value: !Ref vpcSubnetPublicB
    Export:
      Name: infrastructureVpcSubnetIdB
  publicSubnetIdC:
    Description: Subnet ID of zone C
    Value: !Ref vpcSubnetPublicC
    Export:
      Name: infrastructureVpcSubnetIdC
  publicSubnetIdD:
    Description: Subnet ID of zone D
    Value: !Ref vpcSubnetPublicD
    Export:
      Name: infrastructureVpcSubnetIdD